/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.pelacak.langganan.digital.ui;

import com.mycompany.pelacak.langganan.digital.theme.RegisterTheme;
import com.mycompany.pelacak.langganan.digital.db.UserDAO;
import com.mycompany.pelacak.langganan.digital.model.Users;
import com.mycompany.pelacak.langganan.digital.service.LocalizationService;
import com.mycompany.pelacak.langganan.digital.service.PasswordService;
import java.awt.HeadlessException;
import javax.swing.JOptionPane;

/**
 *
 * @author rifial
 */
@SuppressWarnings("serial")
public class RegisterDialog extends javax.swing.JDialog {

    public RegisterDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal); 
        initComponents();
        applyCustomThemeColors();
//        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
//        this.setTitle("REGISTRASI");
        updateTexts();
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Title = new javax.swing.JLabel();
        Username = new javax.swing.JLabel();
        InputUsername = new javax.swing.JTextField();
        Password = new javax.swing.JLabel();
        ButtonRegister = new javax.swing.JButton();
        LoginLink = new javax.swing.JLabel();
        SubTitle = new javax.swing.JLabel();
        InputPassword = new javax.swing.JPasswordField();
        KonfirmasiPassword = new javax.swing.JPasswordField();
        Password1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 0));
        setResizable(false);

        Title.setFont(new java.awt.Font("Malgun Gothic", 0, 24)); // NOI18N
        Title.setText("REGISTRASI AKUN");

        Username.setFont(new java.awt.Font("Malgun Gothic", 0, 16)); // NOI18N
        Username.setText("USERNAME");

        InputUsername.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        Password.setFont(new java.awt.Font("Malgun Gothic", 0, 16)); // NOI18N
        Password.setText("PASSWORD");

        ButtonRegister.setBackground(new java.awt.Color(0, 51, 204));
        ButtonRegister.setFont(new java.awt.Font("Malgun Gothic", 0, 16)); // NOI18N
        ButtonRegister.setForeground(new java.awt.Color(255, 255, 255));
        ButtonRegister.setText("REGISTER");
        ButtonRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonRegisterActionPerformed(evt);
            }
        });

        LoginLink.setBackground(new java.awt.Color(51, 102, 255));
        LoginLink.setFont(new java.awt.Font("Malgun Gothic", 0, 14)); // NOI18N
        LoginLink.setForeground(new java.awt.Color(0, 51, 255));
        LoginLink.setText("Sudah Punya Akun? Login Disini");
        LoginLink.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LoginLinkMouseClicked(evt);
            }
        });

        SubTitle.setFont(new java.awt.Font("Malgun Gothic", 0, 14)); // NOI18N
        SubTitle.setForeground(new java.awt.Color(255, 255, 255));
        SubTitle.setText("SILAHKAN ISI FORM REGISTER TERLEBIH DAHULU");

        InputPassword.setPreferredSize(new java.awt.Dimension(68, 30));

        KonfirmasiPassword.setPreferredSize(new java.awt.Dimension(68, 30));

        Password1.setFont(new java.awt.Font("Malgun Gothic", 0, 16)); // NOI18N
        Password1.setText("KONFIRMASI PASSWORD");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(103, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Username)
                    .addComponent(Password)
                    .addComponent(Password1)
                    .addComponent(LoginLink)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(ButtonRegister, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(KonfirmasiPassword, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(InputPassword, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(InputUsername, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(116, 116, 116))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(95, 95, 95)
                        .addComponent(SubTitle))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(158, 158, 158)
                        .addComponent(Title)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addComponent(Title)
                .addGap(18, 18, 18)
                .addComponent(SubTitle)
                .addGap(50, 50, 50)
                .addComponent(Username)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(InputUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Password)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(InputPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Password1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(KonfirmasiPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(LoginLink)
                .addGap(46, 46, 46)
                .addComponent(ButtonRegister, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(63, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void LoginLinkMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LoginLinkMouseClicked
        this.setVisible(false);
    }//GEN-LAST:event_LoginLinkMouseClicked

    private void ButtonRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonRegisterActionPerformed
        final int USERNAME_MIN_LENGTH = 4;
        UserDAO userDAO = new UserDAO();

        // MENGAMBIL NILAI DARI INPUT USER
        String username = InputUsername.getText();
        String password = new String(InputPassword.getPassword());
        String confirmPassword = new String(KonfirmasiPassword.getPassword());

        // VALIDASI APAKAH USERNAME KOSONG ATAU MASIH PLACEHOLDER
        if (username.isEmpty() || username.equals(LocalizationService.getString("register.placeholder.username"))) {
            JOptionPane.showMessageDialog(this, LocalizationService.getString("register.message.usernameEmpty"), LocalizationService.getString("dialog.title.error"), JOptionPane.ERROR_MESSAGE);
            return;
        }

        // VALIDASI FORMAT USERNAME
        if (!username.matches("^[a-zA-Z0-9]+$")) {
            JOptionPane.showMessageDialog(this, LocalizationService.getString("register.message.usernameFormatInvalid"), LocalizationService.getString("dialog.title.error"), JOptionPane.ERROR_MESSAGE);
            return;
        }

        // VALIDASI PANJANG MINIMUM USERNAME
        if (username.length() < USERNAME_MIN_LENGTH) {
            JOptionPane.showMessageDialog(this, LocalizationService.getString("register.message.usernameTooShort", USERNAME_MIN_LENGTH), LocalizationService.getString("dialog.title.error"), JOptionPane.ERROR_MESSAGE);
            return;
        }

        //VALIDASI KOLOM PASSWORD
        if (password.isEmpty() || password.equals(LocalizationService.getString("register.placeholder.password"))) {
            JOptionPane.showMessageDialog(this, LocalizationService.getString("register.message.passwordEmpty"), LocalizationService.getString("dialog.title.error"), JOptionPane.ERROR_MESSAGE);
            return;
        }

        // VALIDASI KONFIRMASI PASSWORD
        if (!password.equals(confirmPassword)) {
            JOptionPane.showMessageDialog(this, LocalizationService.getString("register.message.passwordMismatch"), LocalizationService.getString("dialog.title.error"), JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        // VALIDASI APAKAH USERNAME SUDAH DIGUNAKAN
        if (userDAO.isUsernameExists(username.toLowerCase())) {
            JOptionPane.showMessageDialog(this,
                    LocalizationService.getString("register.message.usernameExists", username),
                    LocalizationService.getString("register.message.usernameExists.title"),
                    JOptionPane.ERROR_MESSAGE);
            return;
        }

        // PROSES HASHING JIKA LOLOS VALIDASI
        try {
            String salt = PasswordService.getSalt();
            String hashedPassword = PasswordService.hashPassword(password, salt);

            Users newUser = new Users();

            newUser.setUsername(username.toLowerCase()); // Atur username dengan mengonversinya ke huruf kecil
            newUser.setHashed_password(hashedPassword);
            newUser.setSalt(salt);
            userDAO.addUser(newUser);

            JOptionPane.showMessageDialog(this, LocalizationService.getString("register.message.registrationSuccess"), LocalizationService.getString("dialog.title.success"), JOptionPane.INFORMATION_MESSAGE);

            dispose();

        } catch (HeadlessException e) {
            JOptionPane.showMessageDialog(this, LocalizationService.getString("register.message.registrationFailed"), LocalizationService.getString("dialog.title.error"), JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_ButtonRegisterActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonRegister;
    private javax.swing.JPasswordField InputPassword;
    private javax.swing.JTextField InputUsername;
    private javax.swing.JPasswordField KonfirmasiPassword;
    private javax.swing.JLabel LoginLink;
    private javax.swing.JLabel Password;
    private javax.swing.JLabel Password1;
    private javax.swing.JLabel SubTitle;
    private javax.swing.JLabel Title;
    private javax.swing.JLabel Username;
    // End of variables declaration//GEN-END:variables

    // PASTIKAN METHOD INI TERLIHAT SEPERTI INI
    private void applyCustomThemeColors() {
        RegisterTheme.styleDialogBackground(this);
        RegisterTheme.styleLabelColor(Title, RegisterTheme.COLOR_FOREGROUND);
        RegisterTheme.styleLabelColor(SubTitle, RegisterTheme.COLOR_PLACEHOLDER);
        RegisterTheme.styleLabelColor(Username, RegisterTheme.COLOR_FOREGROUND);
        RegisterTheme.styleLabelColor(Password, RegisterTheme.COLOR_FOREGROUND);
        RegisterTheme.styleLabelColor(Password1, RegisterTheme.COLOR_FOREGROUND);
        RegisterTheme.styleLinkLabelColor(LoginLink);
        RegisterTheme.styleTextField(InputUsername);
        // RegisterTheme.addPlaceholder(InputUsername, "Masukan Username"); 
        RegisterTheme.stylePasswordField(InputPassword);
        // RegisterTheme.addPlaceholder(InputPassword, "Masukan Password"); 
        RegisterTheme.stylePasswordField(KonfirmasiPassword);
        // RegisterTheme.addPlaceholder(KonfirmasiPassword, "Konfirmasi Password");
        RegisterTheme.styleButton(ButtonRegister);
    }

    private void updateTexts() {
        this.setTitle(LocalizationService.getString("register.dialog.title"));
        Title.setText(LocalizationService.getString("register.title"));
        SubTitle.setText(LocalizationService.getString("register.subtitle"));
        Username.setText(LocalizationService.getString("register.label.username"));
        Password.setText(LocalizationService.getString("register.label.password"));
        Password1.setText(LocalizationService.getString("register.label.confirmPassword"));
        ButtonRegister.setText(LocalizationService.getString("register.button.register"));
        LoginLink.setText(LocalizationService.getString("register.link.login"));

        RegisterTheme.updatePlaceholder(InputUsername, LocalizationService.getString("register.placeholder.username"));
        RegisterTheme.updatePlaceholder(InputPassword, LocalizationService.getString("register.placeholder.password"));
        RegisterTheme.updatePlaceholder(KonfirmasiPassword, LocalizationService.getString("register.placeholder.confirmPassword"));
    }

}
