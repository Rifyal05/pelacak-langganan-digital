/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.pelacak.langganan.digital.ui;

import com.mycompany.pelacak.langganan.digital.theme.LoginTheme;
import com.mycompany.pelacak.langganan.digital.db.UserDAO;
import com.mycompany.pelacak.langganan.digital.model.Users;
import com.mycompany.pelacak.langganan.digital.service.PasswordService;
import java.awt.Cursor;
import java.util.Locale;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import com.mycompany.pelacak.langganan.digital.service.LocalizationService;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;

/**
 *
 * @author rifial
 */
@SuppressWarnings("serial")
public class LoginFrame extends javax.swing.JFrame {

    private String currentPasswordPlaceholder;

    /**
     * Creates new form LoginFrame2
     */
    public LoginFrame() {
        initComponents();
        InputUsername.setName("UsernameField");
        InputPassword.setName("PasswordField");
        applyCustomThemeColors();
        setupLinkActions();
        setupEnterKeyListener();
//        this.setTitle("Login Form");
        this.setLocationRelativeTo(null);
        setupLanguageComboBox();
        updateTexts();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        intltitle = new javax.swing.JLabel();
        intlusername = new javax.swing.JLabel();
        InputUsername = new javax.swing.JTextField();
        intlpassword = new javax.swing.JLabel();
        ButtonLogin = new javax.swing.JButton();
        Register = new javax.swing.JLabel();
        intlsubtitle = new javax.swing.JLabel();
        InputPassword = new javax.swing.JPasswordField();
        jComboBox1 = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 0));
        setResizable(false);

        intltitle.setFont(new java.awt.Font("Malgun Gothic", 0, 24)); // NOI18N
        intltitle.setText("SELAMAT DATANG");

        intlusername.setFont(new java.awt.Font("Malgun Gothic", 0, 18)); // NOI18N
        intlusername.setText("USERNAME");

        InputUsername.setFont(new java.awt.Font("Malgun Gothic", 0, 14)); // NOI18N
        InputUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InputUsernameActionPerformed(evt);
            }
        });

        intlpassword.setFont(new java.awt.Font("Malgun Gothic", 0, 18)); // NOI18N
        intlpassword.setText("PASSWORD");

        ButtonLogin.setBackground(new java.awt.Color(0, 51, 204));
        ButtonLogin.setFont(new java.awt.Font("Malgun Gothic", 0, 16)); // NOI18N
        ButtonLogin.setForeground(new java.awt.Color(255, 255, 255));
        ButtonLogin.setText("LOGIN");
        ButtonLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonLoginActionPerformed(evt);
            }
        });

        Register.setBackground(new java.awt.Color(51, 102, 255));
        Register.setFont(new java.awt.Font("Malgun Gothic", 0, 14)); // NOI18N
        Register.setForeground(new java.awt.Color(0, 51, 255));
        Register.setText("Belum Punya Akun? Register disini!!");

        intlsubtitle.setFont(new java.awt.Font("Malgun Gothic", 0, 14)); // NOI18N
        intlsubtitle.setForeground(new java.awt.Color(255, 255, 255));
        intlsubtitle.setText("SILAHKAN LOGIN TERLEBIH DAHULU SEBELUM MELANJUTKAN");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ButtonLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(123, 123, 123)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Register, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(intlpassword, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(intlusername, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(InputPassword, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(InputUsername, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 565, Short.MAX_VALUE))))
                .addGap(136, 136, 136))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(intlsubtitle)
                .addGap(208, 208, 208))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(intltitle)
                        .addGap(302, 302, 302))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(64, 64, 64)
                .addComponent(intltitle)
                .addGap(18, 18, 18)
                .addComponent(intlsubtitle)
                .addGap(45, 45, 45)
                .addComponent(intlusername)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(InputUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(intlpassword)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(InputPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Register)
                .addGap(40, 40, 40)
                .addComponent(ButtonLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(106, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void InputUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InputUsernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_InputUsernameActionPerformed

    private void ButtonLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonLoginActionPerformed
        // AMBIL INPUT DARI PENGGUNA
        String username = InputUsername.getText();
        String password = new String(InputPassword.getPassword());

        // 2. VALIDASI INPUT
        if (username.isEmpty() || username.equals(LocalizationService.getString("login.placeholder.username")) || password.isEmpty()) {
            JOptionPane.showMessageDialog(this,
                    LocalizationService.getString("login.message.emptyFields"),
                    LocalizationService.getString("dialog.title.error"),
                    JOptionPane.ERROR_MESSAGE);
            return;
        }

        // BERI UMPAN BALIK KE PENGGUNA & NONAKTIFKAN TOMBOL
        // Beri tahu pengguna bahwa proses sedang berjalan
        ButtonLogin.setEnabled(false);
        // UBAH TEKS TOMBOL SAAT LOADING
        ButtonLogin.setText(LocalizationService.getString("login.button.verifying"));
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));

        // Ubah cursor menjadi ikon 'tunggu'
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));

        // JALANKAN PROSES VERIFIKASI DI BACKGROUND THREAD BARU
        new Thread(() -> {
            try {
                UserDAO userDAO = new UserDAO();

                // Cari pengguna di database
                Users userFromDb = userDAO.getUserByUsername(username.toLowerCase());

                boolean loginSuccess = false;
                if (userFromDb != null) {
                    String storedHash = userFromDb.getHashed_password();
                    String salt = userFromDb.getSalt();
                    // verifikasi password
                    if (PasswordService.verifyPassword(password, storedHash, salt)) {
                        loginSuccess = true;
                    }
                }

                final boolean finalLoginSuccess = loginSuccess;
                SwingUtilities.invokeLater(() -> {
                    if (finalLoginSuccess) {
                        JOptionPane.showMessageDialog(this,
                                LocalizationService.getString("login.message.loginSuccess"),
                                LocalizationService.getString("dialog.title.success"),
                                JOptionPane.INFORMATION_MESSAGE);

                        // Buka form utama aplikasi
                        UIFORM uiForm = new UIFORM();
                        uiForm.setVisible(true); 
                        uiForm.refreshSubscriptionTable();

                        // Tutup form login
                        this.dispose();
                    } else {
                        // JIKA GAGAL
                        JOptionPane.showMessageDialog(this,
                                LocalizationService.getString("login.message.loginFailed"),
                                LocalizationService.getString("login.message.loginFailed.title"),
                                JOptionPane.ERROR_MESSAGE);
                    }
                });

            } catch (Exception e) {
                SwingUtilities.invokeLater(() -> {
                    String errorMessage = LocalizationService.getString("login.message.systemError", e.getMessage());
                    JOptionPane.showMessageDialog(this,
                            errorMessage,
                            LocalizationService.getString("dialog.title.error"),
                            JOptionPane.ERROR_MESSAGE);
                });
            } finally {
                SwingUtilities.invokeLater(() -> {
                    ButtonLogin.setEnabled(true);
                    ButtonLogin.setText(LocalizationService.getString("login.button.login"));
                    setCursor(Cursor.getDefaultCursor());

                });
            }
        }).start();
    }//GEN-LAST:event_ButtonLoginActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new LoginFrame().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonLogin;
    private javax.swing.JPasswordField InputPassword;
    private javax.swing.JTextField InputUsername;
    private javax.swing.JLabel Register;
    private javax.swing.JLabel intlpassword;
    private javax.swing.JLabel intlsubtitle;
    private javax.swing.JLabel intltitle;
    private javax.swing.JLabel intlusername;
    private javax.swing.JComboBox<String> jComboBox1;
    // End of variables declaration//GEN-END:variables

    private void applyCustomThemeColors() {
        LoginTheme.styleFrameBackground(this);
        LoginTheme.styleLabelColor(intltitle, LoginTheme.COLOR_FOREGROUND);
        LoginTheme.styleLabelColor(intlusername, LoginTheme.COLOR_FOREGROUND);
        LoginTheme.styleLabelColor(intlpassword, LoginTheme.COLOR_FOREGROUND);
        LoginTheme.styleTextFieldColor(InputUsername);
        LoginTheme.styleTextFieldColor(InputPassword);
        LoginTheme.styleButtonColor(ButtonLogin);
    }

    private void setupLinkActions() {
        Register.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SwingUtilities.invokeLater(() -> {
                    new RegisterDialog(LoginFrame.this, true).setVisible(true);
                });
            }
        });
    }

    private void updateTexts() {
        this.setTitle(LocalizationService.getString("login.frame.title"));
        intltitle.setText(LocalizationService.getString("login.title"));
        intlsubtitle.setText(LocalizationService.getString("login.subtitle"));
        intlusername.setText(LocalizationService.getString("login.label.username"));
        intlpassword.setText(LocalizationService.getString("login.label.password"));
        ButtonLogin.setText(LocalizationService.getString("login.button.login"));
        Register.setText(LocalizationService.getString("login.link.register"));

        LoginTheme.updatePlaceholder(InputUsername, LocalizationService.getString("login.placeholder.username"));
        LoginTheme.updatePlaceholder(InputPassword, LocalizationService.getString("login.placeholder.password"));
    }

    @SuppressWarnings("deprecation")
    private void setupLanguageComboBox() {
        jComboBox1.removeAllItems();
        jComboBox1.addItem("Bahasa Indonesia");
        jComboBox1.addItem("English");

        // Atur pilihan default berdasarkan locale saat ini
        if ("id".equals(LocalizationService.getCurrentLocale().getLanguage())) {
            jComboBox1.setSelectedItem("Bahasa Indonesia");
        } else {
            jComboBox1.setSelectedItem("English");
        }

        // Tambahkan listener untuk mengubah bahasa saat dipilih
        jComboBox1.addActionListener(e -> {
            String selectedLanguage = (String) jComboBox1.getSelectedItem();
            if ("Bahasa Indonesia".equals(selectedLanguage)) {
                LocalizationService.setLocale(new Locale("id", "ID"));
            } else {
                LocalizationService.setLocale(new Locale("en", "US"));
            }
            updateTexts();
        });
    }

    private void setupEnterKeyListener() {
        InputPassword.addKeyListener(new KeyListener() {
            @Override
            public void keyTyped(KeyEvent e) {
            }

            @Override
            public void keyPressed(KeyEvent e) {
            }

            @Override
            public void keyReleased(KeyEvent e) {
                if (e.getKeyCode() == KeyEvent.VK_ENTER) {
                    ButtonLogin.doClick();
                }
            }
        });

    }
}
